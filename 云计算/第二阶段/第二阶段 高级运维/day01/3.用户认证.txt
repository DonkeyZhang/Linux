用户认证
2.1 问题

沿用练习一，通过调整Nginx服务端配置，实现以下目标：
访问Web页面需要进行用户认证
用户名为：tom，密码为：123456
2.2 方案

模板配置文件框架如下：
[root@proxy ~]# vim  /usr/local/nginx/conf/nginx.conf


###################################################
worker_processes  1;                    #开启的进程

程序program 硬盘
进程process 从硬盘读到内存 多进程,独立,占内存,消耗资源
线程  thread   3个线程共享父进程的内存
1 process :3个thread 
2 process :3个thread  父进程死掉,线程都挂掉
##################################################

全局配置（用户名,日志,进程)
http{
    server{
        listen 80;
        server_name localhost;                #www.qq.com
        root html;                            #相对路径,默认/usr/local
/nginx
       }
       server{
        listen 80;
        server_name www.xyz.com;
        root www;
       }



index index.html 默认页面

通过Nginx实现Web页面的认证，需要修改Nginx配置文件，在配置文件中添加auth语句实现用户认证。最后使用htpasswd命令创建用户及密码即可。
2.3 步骤

实现此案例需要按照如下步骤进行。
步骤一：修改Nginx配置文件

1）修改/usr/local/nginx/conf/nginx.conf


[root@proxy ~]# vim /usr/local/nginx/conf/nginx.conf
.. ..
server {
        listen       80;
        server_name  localhost;
        auth_basic "Input Password:";                        //认证提示符
        auth_basic_user_file "/usr/local/nginx/pass";        //认证密码文件
        location / {
            root   html;
            index  index.html index.htm;
        }
  }


2）生成密码文件，创建用户及密码

使用htpasswd命令创建账户文件，需要确保系统中已经安装了httpd-tools。

[root@proxy ~]# yum -y install  httpd-tools

[root@proxy ~]# htpasswd -c /usr/local/nginx/pass   tom     #-c 创建新文件   //创建密码文件
New password: 
Re-type new password: 
Adding password for user tom

[root@proxy ~]# htpasswd  /usr/local/nginx/pass    jerry      //追加用户，不使用-c选项
New password: 
Re-type new password: 
Adding password for user jerry

[root@proxy ~]# cat /usr/local/nginx/pass




3）重启Nginx服务

[root@proxy ~]# /usr/local/nginx/sbin/nginx -s reload    //重新加载配置文件    
#请先确保nginx是启动状态，否则运行该命令会报错,报错信息如下：

#[error] open() "/usr/local/nginx/logs/nginx.pid" failed (2: No such file or directory)
2.1 问题

沿用练习一，通过调整Nginx服务端配置，实现以下目标：
访问Web页面需要进行用户认证
用户名为：tom，密码为：123456
2.2 方案

模板配置文件框架如下：
[root@proxy ~]# vim  /usr/local/nginx/conf/nginx.conf


###################################################
worker_processes  1;                    #开启的进程

程序program 硬盘
进程process 从硬盘读到内存 多进程,独立,占内存,消耗资源
线程  thread   3个线程共享父进程的内存
1 process :3个thread 
2 process :3个thread  父进程死掉,线程都挂掉
##################################################

全局配置（用户名,日志,进程)
http{
    server{
        listen 80;
        server_name localhost;                #www.qq.com
        root html;                            #相对路径,默认/usr/local
/nginx
       }
       server{
        listen 80;
        server_name www.xyz.com;
        root www;
       }



index index.html 默认页面

通过Nginx实现Web页面的认证，需要修改Nginx配置文件，在配置文件中添加auth语句实现用户认证。最后使用htpasswd命令创建用户及密码即可。
2.3 步骤

实现此案例需要按照如下步骤进行。
步骤一：修改Nginx配置文件

1）修改/usr/local/nginx/conf/nginx.conf


[root@proxy ~]# vim /usr/local/nginx/conf/nginx.conf
.. ..
server {
        listen       80;
        server_name  localhost;
        auth_basic "Input Password:";                        //认证提示符
        auth_basic_user_file "/usr/local/nginx/pass";        //认证密码文件
        location / {
            root   html;
            index  index.html index.htm;
        }
  }


2）生成密码文件，创建用户及密码

使用htpasswd命令创建账户文件，需要确保系统中已经安装了httpd-tools。

[root@proxy ~]# yum -y install  httpd-tools

[root@proxy ~]# htpasswd -c /usr/local/nginx/pass   tom     #-c 创建新文件   //创建密码文件
New password: 
Re-type new password: 
Adding password for user tom

[root@proxy ~]# htpasswd  /usr/local/nginx/pass    jerry      //追加用户，不使用-c选项
New password: 
Re-type new password: 
Adding password for user jerry

[root@proxy ~]# cat /usr/local/nginx/pass




3）重启Nginx服务

[root@proxy ~]# /usr/local/nginx/sbin/nginx -s reload    //重新加载配置文件    
#请先确保nginx是启动状态，否则运行该命令会报错,报错信息如下：

#[error] open() "/usr/local/nginx/logs/nginx.pid" failed (2: No such file or directory)





