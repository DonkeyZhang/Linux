
vim  a.txt 修改
：q!
cpu --内存--硬盘
###########################################


表－1 基本正则列表 grep
 ^  以什么开头zhangxinwan   #^zhang

 $  以什么结尾zhangxinwan    #wan$

 [  ] 集合  [abcd]  含有集合里任意的都行 # [a-z]有规律的都行

 [^ ] 集合区反 集合里没有的才行

   . 任意单个字符

   * 匹配前1个字符的任意次数包含0次 #bbb*  前面1个b

  .* 任意字符，任意次数

 \{n,m\} 匹配前1个字符n-m 次

 \{n\}   匹配前1个字符n次

 \{n,\}  匹配前1个字符n次以上，包含n次

 \（\）    保留 整体
#########################################
表－1 扩展正则列表 (extend)egrep 优先用扩展正则

  +  最少匹配1次

  ？  最多匹配1次

 {n,m} n-m 次

  ()  组合为整体

   |    或者

  \b 单词边界
##############################################

sed -n             #(不显示默认输出)

sed -n 'p'         # 显示所有行

sed -n '3,6p'

sed -i             #（直接对文件操作）

sed -i '1,6d'      #删除1-6行

sed -i 'd'         #删除每一行

sed -i '1d;6d;9d ' #删除1，6，9行

sed -n '3,+10p'    #显示第3行，和后面的10行

sed -n '1~2p'      #显示奇数行，第1行是起点，2是跨度

sed -n '2-2p'      #显示偶数行，第2行是起点，2是跨度

sed '/xml/d'       #删除包括xml的行 

sed '/xml/!d'      #删除不包括xml的行

sed 's/2017/xxx/'  #第1个2017换成xxx
                        #默认是第一个2017
sed 's/2017/xxx/2' #第2个 

sed 's/2017/xxx/g' #全部

sed '1s/2017/xxx/g'#第1行全部

sed '2s/2017/xxx/g'#第2行全部

sed -n 's/2017/xxx/1p' #只显示第一个替换的行

sed -n 's  #s/bin/bash#/sbin/sh#gp' #格式符 s/ / / 可以用任意符号

sed -n '4,7s/^/#/'     #4-7行开头加#
sed -n '4,7s/$/#/'     #4-7行结尾加# 

sed -n 's/.//2'        #将第2个任意字符替换成空

sed -n 's/.$//'        #将每1行的任意结尾替换成空 

sed -n -r 's/(beijing)/ni hao \1 /' #将beijing替换成你好北京 （）保留 #扩展正则

sed -n 's/^/0551 /'     #开头加0551 
222221
233244
323322

sed -r 's/([0-9]+1)/010\1/'         #[0-9]+匹配第一个至少有1个数字的，粘贴第1个复制的
lisi     1111 
zhangsan 2222
lala     3333
（） 复制 \ 粘贴
 \1 粘贴 第一个括号 \2 粘贴第2个括号
 \1\1粘贴2次以放在任何地方 

sed -n -r 's/^(.)(.*)(.)$/\3\2\1/'  #将开头结尾互换^(.)  (.)已经占了开头结尾（.*）代表剩下内容

#####支持扩展的，一定支持正则 ########

sed -r 's/[0-9]//g' #删除全部的数字

sed -r 's/^( )//'   #^( )开头空格  #( ){2}至少2个空格

sed -r 's/([A-Z]+)/[\1]/g'

/p查  /d删  /a.i.c  s/改/删 

sed '1a  xxxx'   增加下面1行
sed '1i  xxxx'   增加上面1行
sed '1c  xxxx'   替换第
sed '/Beijing/a xxx' 在北京的下面增加1行
sed '/Beijing/i xxx' 在北京c的上面增加1行
sed '/beijing/c xxx' 在北京的这行全改了





































 






















