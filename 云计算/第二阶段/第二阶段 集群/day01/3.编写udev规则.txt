电脑动态管理所有移动硬盘
udev动态管理设备方式
devf.s静态管理方式

3 案例3：编写udev规则
3.1 问题

编写udev规则，实现以下目标：
当插入一个U盘时，该U盘自动出现一个链接称为udisk
U盘上的第1个分区名称为udisk1，以此类推
终端上出现提示信息”udisk plugged in”

3.2 方案

问题：加载一个USB设备后，系统可能识别为sda也可能识别为sdb，能不能固定呢？
对于Linux kernel 2.6及更新的操作系统版本会将设备的相关信息动态写入/sys文件系统中，而udev程序可以通过读取这些设备系信息，并根据自己的udev规则进行设备管理器，实现如下功能：
处理设备命名
决定要创建哪些设备文件或链接
决定如何设置属性
决定触发哪些事件
udev默认规则存放在/etc/udev/rules.d目录下，通过修改此目录下的规则实现设备的命名、属性、链接文件等。

3.3 步骤

实:现此案例需要按照如下步骤进行。
步骤一：编写udev规则
1）准备USB设备（如果使用真实机演示，下面为虚拟机添加USB设备可以忽略）
使用virt-manager为虚拟机添加USB设备，如图-5所示。注意添加设备时一定要选择正确的USB设备，图-9仅是参考案例，每个人的USB品牌与型号都有可能不一样！

图-9

1）查看设备属性

加载USB设备的同时实时查看设备的相关属性，可以使用monitor指令。
[root@proxy ~]# udevadm monitor --property

#动态观看插拔能看到信息#

如果设备已经加载则无法使用monitor查看相关属性。可以使用下面的命令查看设备属性。
[root@proxy ~]# udevadm info --query=path --name=/dev/sda
[root@proxy ~]# udevadm info --query=property --path=/block/sda
[root@proxy ~]# udevadm info --query=all --attribute-walk --path=/block/sda

#静态看
单独查看某个磁盘分区的属性信息。
property
attribute
属性  

root@proxy ~]# udevadm info --query=property --path=/block/sdada1


2）编写udev规则文件（实现插拔USB设备时有屏幕提示信息）
注意：修改规则文件不能照抄，这里的变量都是需要根据实际情况而修改的！！！
每个设备的属性都有所不同！！！一定要根据前面查询的info信息填写。

[root@proxy ~]# vim  /etc/udev/rules.d/70-usb.rules
SUBSYSTEMS=="usb",ATTRS{manufacturer}=="TOSHIBA",ATTRS{serial}=="60A44CB4665EEE4133500001",.

在virt-manager中删除、添加USB设备，测试自己的udev规则是否成功。
排错方法：通过查看/var/log/messages日志文件排错。


/usr/bin/wall #广播的信息，优先级最高，平时的邮件信息类似echo，但所有的人都知道

3）继续修改规则文件（实现给分区命名）
[root@proxy ~]# udevadm info --query=property --path=/block/sdb/sdb1

[root@proxy ~]# /etc/udev/rules.d/70-usb.rules
ACTION=="add",ENV{ID_VENDOR}=="TOSHIBA",ENV{DEVTYPE}=="partition",ENV{ID_SERIAL_SHORT}=="60A44CB4665EEE4133500001",SYMLINK="usb%n"

在virt-manager中删除、添加USB设备，测试自己的udev规则是否成功。

4）继续修改规则文件（修改设备所有者和权限）
[root@proxy ~]# /etc/udev/rules.d/70-usb.rules
ACTION=="add",ENV{ID_VENDOR}=="TOSHIBA",ENV{DEVTYPE}=="partition",ENV{ID_SERIAL_SHORT}=="60A44CB4665EEE4133500001",SYMLINK="usb%n",OWNER="root",GROUP="root",MODE="0644"

在virt-manager中删除、添加USB设备，测试自己的udev规则是否成功。

5）继续修改规则文件（插拔U盘等于启停服务）
注意：启动服务的程序systemctl，必须使用绝对路径。
[root@proxy ~]# /etc/udev/rules.d/70-usb.rules
ACTION=="add",ENV{ID_VENDOR}=="TOSHIBA",ENV{ID_SERIAL_SHORT}=="60A44CB4665EEE4133500001",RUN+="/usr/bin/systemctl start httpd"
ACTION=="remove",ENV{ID_VENDOR}=="TOSHIBA",ENV{ID_SERIAL_SHORT}=="60A44CB4665EEE4133500001",RUN+="/usr/bin/systemctl stop httpd" 
在virt-manager中删除、添加USB设备，测试自己的udev规则是否成功。

总结知识点：
udev规则文件，常见指令操作符如表-4所示。
表－4 udev常见指令操作符
==
!=
=
+=
:=
NAME="udev"
SYMILINK+="data"
OWNER="student"
MODE"0600"
ACTION="add/remove"
ERNEL=="sd[a-z]1"
RUN+=程序

udev常用替代变量：
%k：内核所识别出来的设备名，如sdb1
%n：设备的内核编号，如sda3中的3
%p：设备路径，如/sys/block/sdb/sdb1
%%：%符号本身


